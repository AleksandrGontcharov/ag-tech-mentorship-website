"use strict";(self.webpackChunkag_tech_mentoring=self.webpackChunkag_tech_mentoring||[]).push([[365],{3905:(t,e,i)=>{i.d(e,{Zo:()=>c,kt:()=>h});var o=i(7294);function n(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function r(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,o)}return i}function a(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?r(Object(i),!0).forEach((function(e){n(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function l(t,e){if(null==t)return{};var i,o,n=function(t,e){if(null==t)return{};var i,o,n={},r=Object.keys(t);for(o=0;o<r.length;o++)i=r[o],e.indexOf(i)>=0||(n[i]=t[i]);return n}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)i=r[o],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(n[i]=t[i])}return n}var s=o.createContext({}),u=function(t){var e=o.useContext(s),i=e;return t&&(i="function"==typeof t?t(e):a(a({},e),t)),i},c=function(t){var e=u(t.components);return o.createElement(s.Provider,{value:e},t.children)},g="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},p=o.forwardRef((function(t,e){var i=t.components,n=t.mdxType,r=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),g=u(i),p=n,h=g["".concat(s,".").concat(p)]||g[p]||m[p]||r;return i?o.createElement(h,a(a({ref:e},c),{},{components:i})):o.createElement(h,a({ref:e},c))}));function h(t,e){var i=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var r=i.length,a=new Array(r);a[0]=p;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[g]="string"==typeof t?t:n,a[1]=l;for(var u=2;u<r;u++)a[u]=i[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,i)}p.displayName="MDXCreateElement"},7876:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=i(7462),n=(i(7294),i(3905));const r={sidebar_position:1},a="Level 1",l={unversionedId:"foundational-program/git/level_1",id:"foundational-program/git/level_1",title:"Level 1",description:"Prerequisite:",source:"@site/docs/foundational-program/3-git/level_1.md",sourceDirName:"foundational-program/3-git",slug:"/foundational-program/git/level_1",permalink:"/ag-tech-mentorship-website/docs/foundational-program/git/level_1",draft:!1,editUrl:"https://github.com/AleksandrGontcharov/ag-tech-mentorship/blob/master/docs/foundational-program/3-git/level_1.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ue726 Git",permalink:"/ag-tech-mentorship-website/docs/category/-git"},next:{title:"Level 2",permalink:"/ag-tech-mentorship-website/docs/foundational-program/git/level_2"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"What is git?",id:"what-is-git",level:3},{value:"What is a git repository?",id:"what-is-a-git-repository",level:3},{value:"What is GitHub?",id:"what-is-github",level:3},{value:"Why use git?",id:"why-use-git",level:3},{value:"Is git difficult?",id:"is-git-difficult",level:3},{value:"Basic git",id:"basic-git",level:2},{value:"Local repository",id:"local-repository",level:3},{value:"Remote repository",id:"remote-repository",level:3},{value:"\u2026or create a new repository on the command line",id:"or-create-a-new-repository-on-the-command-line",level:3},{value:"\u2026or push an existing repository from the command line",id:"or-push-an-existing-repository-from-the-command-line",level:3},{value:"Conclusion",id:"conclusion",level:3}],c={toc:u},g="wrapper";function m(t){let{components:e,...i}=t;return(0,n.kt)(g,(0,o.Z)({},c,i,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"level-1"},"Level 1"),(0,n.kt)("p",null,"Prerequisite: "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Computer setup"),(0,n.kt)("li",{parentName:"ul"},"GitHub Account"),(0,n.kt)("li",{parentName:"ul"},"Knowledge of basic commands on the command line")),(0,n.kt)("h2",{id:"introduction"},"Introduction"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"what-is-git"},"What is git?"),(0,n.kt)("p",null,"Git is a distributed version control system that allows developers to track changes in their codebase, collaborate with others, and easily revert to previous versions."),(0,n.kt)("h3",{id:"what-is-a-git-repository"},"What is a git repository?"),(0,n.kt)("p",null,"A Git repository (a.k.a a ",(0,n.kt)("strong",{parentName:"p"},"git repo")," or just ",(0,n.kt)("strong",{parentName:"p"},"repo"),") is a directory where a git project's files and version history are stored."),(0,n.kt)("h3",{id:"what-is-github"},"What is GitHub?"),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"git \u2260 GitHub")),(0,n.kt)("p",null,"GitHub is a web-based platform that provides hosting for git repositories and adds collaboration and social features on top of Git."),(0,n.kt)("h3",{id:"why-use-git"},"Why use git?"),(0,n.kt)("p",null,"It is a fundamental and foundational tool that is a requirement if you want to work with code, collaborate on code with others, have the ability to revert complex changes, and be part of the coding community."),(0,n.kt)("h3",{id:"is-git-difficult"},"Is git difficult?"),(0,n.kt)("p",null,"I would say"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Not easy"),(0,n.kt)("li",{parentName:"ul"},"Not intuitive")),(0,n.kt)("p",null,"However, it is reliable, powerful, and the learning curve is worth it."),(0,n.kt)("h2",{id:"basic-git"},"Basic git"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"git")," command: The basic subcommands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell-session"},"user@host:~/repos$ git\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   // highlight-next-line\n   clone     Clone a repository into a new directory\n   // highlight-next-line\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n// highlight-next-line\n   add       Add file contents to the index\n\nexamine the history and state (see also: git help revisions)\n   // highlight-next-line\n   log       Show commit logs\n   // highlight-next-line\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   // highlight-next-line\n   commit    Record changes to the repository\n\ncollaborate (see also: git help workflows)\n   // highlight-next-line\n   pull      Fetch from and integrate with another repository or a local branch\n   // highlight-next-line\n   push      Update remote refs along with associated objects\n   // highlight-next-line\n   remote               Manage set of tracked repositories\n")),(0,n.kt)("h3",{id:"local-repository"},"Local repository"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell-session"},'user@host:~/repos$ mkdir ag-git-tutorial\nuser@host:~/repos$ cd ag-git-tutorial/\nuser@host:~/repos/ag-git-tutorial$ git init\nInitialized empty Git repository in /home/agontcharov/repos/ag-git-tutorial/.git/\nuser@host:~/repos/ag-git-tutorial$ echo "some text" > my_first_file.txt\nuser@host:~/repos/ag-git-tutorial$ git status\nOn branch master\n\nNo commits yet\n\nUntracked files:\n  (use "git add <file>..." to include in what will be committed)\n        my_first_file.txt\n\nnothing added to commit but untracked files present (use "git add" to track)\nuser@host:~/repos/ag-git-tutorial$ git add my_first_file.txt\nuser@host:~/repos/ag-git-tutorial$ git status\nOn branch master\n\nNo commits yet\n\nChanges to be committed:\n  (use "git rm --cached <file>..." to unstage)\n        new file:   my_first_file.txt\n\nuser@host:~/repos/ag-git-tutorial$ git commit -m "my first commit"\n[master (root-commit) 02852f4] my first commit\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 my_first_file.txt\nuser@host:~/repos/ag-git-tutorial$ git log --oneline\n02852f4 (HEAD -> master) my first commit\nuser@host:~/repos/ag-git-tutorial$\n')),(0,n.kt)("h3",{id:"remote-repository"},"Remote repository"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Go to your github profile and create a new repository called ag-git-tutorial, and you should see this:")),(0,n.kt)("h3",{id:"or-create-a-new-repository-on-the-command-line"},"\u2026or create a new repository on the command line"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'echo "# ag-git-tutorial" >> README.md\ngit init\ngit add README.md\ngit commit -m "first commit"\ngit branch -M main\ngit remote add origin https://github.com/<your-username>/ag-git-tutorial.git\ngit push -u origin main\n')),(0,n.kt)("h3",{id:"or-push-an-existing-repository-from-the-command-line"},"\u2026or push an existing repository from the command line"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add origin https://github.com/<your-username>/ag-git-tutorial.git\ngit branch -M main\ngit push -u origin main\n")),(0,n.kt)("p",null,"In our case, we have created a local repository, so we will follow the instructions in step 2, however, our branch was called ",(0,n.kt)("inlineCode",{parentName:"p"},"master"),", so for this tutorial, let's use ",(0,n.kt)("inlineCode",{parentName:"p"},"master"),". "),(0,n.kt)("p",null,"Modified instructions"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell-session"},"user@host:~/repos/ag-git-tutorial$ git remote add origin https://github.com/<your-username>/ag-git-tutorial.git\nuser@host:~/repos/ag-git-tutorial$ git push --set-upstream origin master\nEnumerating objects: 3, done.\nCounting objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 334 bytes | 334.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo https://github.com/AleksandrGontcharov/ag-git-tutorial.git\n * [new branch]      master -> master\nbranch 'master' set up to track 'origin/master'.\n")),(0,n.kt)("h3",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"This tutorial showed you how to use git, but didn't show you how git works?"),(0,n.kt)("p",null,"Questions you should have:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"What is origin?"),(0,n.kt)("li",{parentName:"ol"},"What is a remote repository?"),(0,n.kt)("li",{parentName:"ol"},"What is a commit?"),(0,n.kt)("li",{parentName:"ol"},"What does git push do?"),(0,n.kt)("li",{parentName:"ol"},"What about git clone?"),(0,n.kt)("li",{parentName:"ol"},"What does git add do?"),(0,n.kt)("li",{parentName:"ol"},"Why do we have to add before we commit? Why not just commit?"),(0,n.kt)("li",{parentName:"ol"},"Do I have to use the command line? What about GUI tools?"),(0,n.kt)("li",{parentName:"ol"},"What does git log do?")),(0,n.kt)("p",null,"All of these will be answered in Level 2."))}m.isMDXComponent=!0}}]);